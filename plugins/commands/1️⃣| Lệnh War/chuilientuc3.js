// ch·ª≠i vƒ©nh vi·ªÖn
import { existsSync, readFileSync, writeFileSync } from "node:fs";
import { join } from "node:path";

const config = {
  name: "chuilientuc3",
  aliases: ["vcl"],
  description: "",
  usage: "",
  cooldown: 3,
  permissions: [2],
};
let reotag = [
  "s·ªßa l·∫π ƒëi",
  "√∫i cn b∆∞·ªõm kh·∫Øm:))))",
  "cn gi√† m√†y ƒë·∫≠p ƒët m√†y √† eyy:))) ",
  "√∫i coi cn b·∫ªm n√≥ b·ªã ch√† ƒë·∫°p k√¨a:)))",
  "kh·∫Øm chui d√¥ b∆∞·ªõm con ƒëƒ© gi√† n√≥ ch·∫∑n keo n√∫p tr·ªèng √†:))))",
  "c√¢m √† con ngu:)))",
  " eyyy:))",
  "√∫i c√°i con h√¥i:)))",
  "ch·∫øt cn gi√† m√†y √†:)))",
  "ƒë·ªãt con c·ª• m√†y ph·ªçt kh√≠ b∆∞·ªõm:)))",
  "√∫i cha b·ªã √∫p:))) con tr·ªën ƒë√¢u r ae:)))",
  "∆°i sao m ngu v·∫≠y",
  "M l√† con ch√≥ d∆∞·ªõi ch√¢n t ph·∫£i k?",
  "√™i culi",
  "n√†o m√†y m·ªõi b·∫±ng ƒë∆∞·ª£c c√°i m√≥ng ch√¢n tao √°",
  "con m·∫π m√†y ngu √†",
  "con ch√≥ m s·ªßa l·∫π t coi",
  "m ngu m√† ph·∫£i kh√¥ng",
  "bede s·ªßa l·∫π ƒëi",
  "th·∫±ng ƒë·∫ßu ƒëinh ƒë√¢u r·ªìi",
  "s·ªìn l√™n v·ªõi tao ƒëi n√® th·∫±ng bo√†i",
  "th·∫±ng nh∆∞ m√†y x·ª©ng ƒë√°ng ƒÉn c·ª©t tao √°",
  "c·ªë g·∫Øng m√† ƒë·ªÉ win tao nhe",
  "tao b·∫•t b·∫°i m√† th·∫±ng ngu",
  "·∫≥ng hƒÉng v√†o ƒëi ch·ª© m√†y ·∫≥ng g√¨ m√† nh·∫°t nh·∫Ωo th·∫ø",
  "m·∫°nh m·∫Ω l√™n xem n√†o",
  "k√©m c·ªèi th·∫ø th·∫±ng m·ªì c√¥i",
  "ph·∫£n kh√°ng √™i sao ƒë·ª©ng y√™n ch·ªãu tr·∫≠n v·∫≠y",
  "b·∫•t hi·∫øu √†",
  "th·∫±ng ƒë√∫ m s·ªßa ƒëi n√†o",
  "m·∫π m√†y b·ªã tao ƒë·∫ßu ƒë·ªôc t·ªõi ch·∫øt m√†",
  "tao tr√πm m·∫π r·ªìi c√≤n g√¨ m√† c√£i n·ªØa",
  "kiki s·ªßa ƒëi n√®",
  "ƒë√†n √¥ng hay ƒë√†n b√† m√† y·∫øu ƒëu·ªëi v·∫≠y",
  "mau ƒëi n√® em √™i",
  "ch·∫≠m ch·∫°p v·∫≠y",
  "th·∫±ng b·∫•t t√†i v√¥ d·ª•ng s·ªßa m·∫°nh l√™n ƒëi",
  "b√† gi√† m√†y b·ªã tao treo c·ªï l√™n tr√™n tr·∫ßn nh√† m√†",
  "m√†y c√≤n g√¨ m·ªõi n·ªØa kh√¥ng ƒë√≥ em",
  "th·∫±ng ƒë·∫ßu ƒëinh cay c√∫ tao √† :)))",
  "tao b√° ƒë·∫°o vcl ü§£",
  "√™i th·∫±ng ngh√®o sao c√¢m r·ªìi",
  "m√†y x·ª©ng ƒë√°ng ƒÉn c·ª©t tao :))",
  "th·∫±ng v√¥ sinh cay c√∫ tao √†",
  "m√†y c·ªë g·∫Øng ƒë·ªÉ ƒë∆∞·ª£c nh∆∞ tao ƒëi",
  "b·∫Øt ch∆∞·ªõc tao √† th·∫±ng ngu",
  "qu·ª≥ l·∫°y van xin tao ƒëi n√®",
  "con hai n√©o nh∆∞ m√†y ƒëang di·ªÖn h√†i cho tao c∆∞·ªùi ƒë·∫•y √†",
  "b·ªã tao ch·ª≠i t·ªõi h√≥a d·∫°i lu√¥n r·ªìi √†",
  "v√¥ sinh m√† ƒë√≤i ƒë·∫ª con √† th·∫±ng bo√†i",
  "con c·∫∑c ch∆∞a m·ªü m·∫Øt m√† ƒë√≤i ƒë·ª• ai",
  "m√†y s·ª£ tao r·ªìi h·∫£",
  "kh·∫Øc tinh ƒë·ªùi m√†y l√† tao n√®",
  "s·ªßa hƒÉng v√†o cho tao c√≥ h·ª©ng √™i",
  "th·∫±ng ch√≥ ƒë·∫ª d√¢n t·ªôc mi√™n hay sao m√† ƒëen th·∫ø",
  "c·ªë l√™n ƒëi n√® em √™i",
  "s·∫Øp win ƒë∆∞·ª£c r·ªìi √°",
  "c√≥ c·ª≠a ƒë·ªÉ win tao kh√¥ng",
  "m√†y ƒëang n·∫±m m∆° hay sao √°",
  "tao b·∫•t b·∫°i cmnr",
  "tao l√† b√° ch·ªß thi√™n h·∫° ƒë·∫•y",
  "t·ªõi s√°ng kh√¥ng",
  "m√†y s·ª≠a n·ªØa ƒëi sao m√† im re r·ªìi",
  "tao cho m√†y c√¢m ch∆∞a m√† m√†y c√¢m th·∫ø",
  "ƒë·∫•u tranh ƒë√™ th·∫±ng nhu nh∆∞·ª£c",
  "hƒÉng h√°i l√™n ƒë√™ em √™i",
  "ƒë√†n √¥ng m√† s·ª©c l·ª©c nh∆∞ ƒë√†n b·∫£ v·∫≠y",
  "cay c√∫ √¥m h·∫≠n tao su·ªët ƒë·ªùi n√® ph·∫£i kh√¥ng",
  "√∫i c√°i con ch√≥ n√†y b·ªã ngu √†"
]

setInterval(() => {
  let data = JSON.parse(readFileSync(join(global.assetsPath, "reotag.json"), "utf-8"));
  for (let [key, value] of Object.entries(data)) {
    if (value.enable) {
      if (value.index >= reotag.length) value.index = 0;
      api.sendMessage({
        body: `${reotag[value.index]} ${value.name}`,
        mentions: [{
          tag: value.name,
          id: value.id
        }]
      }, key, () => {
        value.index++;
        writeFileSync(join(global.assetsPath, "reotag.json"), JSON.stringify(data, null, 4), "utf-8");
      })
    }
  }
}, 6000)

const path = join(global.assetsPath, 'reotag.json');
function onLoad() {
  if (!existsSync(path)) {
    writeFileSync(path, JSON.stringify({}), "utf-8");
  }
}

async function onCall({ message, args }) {
  const { threadID } = message;

  let data = JSON.parse(readFileSync(path, "utf-8"));
  if (!data[threadID]) data[threadID] = {
    enable: true,
    index: 0,
    id: "",
    name: ""
  };

  let input = args.join(" ");
  if (input == "off") {
    data[threadID].enable = false;
    data[threadID].index = 0;
    data[threadID].id = "";
    data[threadID].name = "";
  } else {
    if (Object.keys(message.mentions).length != 0) {
      data[threadID].enable = true;
      data[threadID].id = Object.keys(message.mentions)[0];
      data[threadID].name = Object.values(message.mentions)[0]
    } else return message.send("Thi·∫øu tag");
  }

  writeFileSync(path, JSON.stringify(data, null, 4), "utf-8");

  message.send(`ƒê√£ ${(input == "off" ? "t·∫Øt" : "b·∫≠t")}`);
}

export {
  config,
  onCall,
  onLoad
}